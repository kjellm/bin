#! /bin/bash

set -Euo pipefail

RUBY_VERSION=2.3.1
LOG=/tmp/setup.log

function error {
    echo "The bootsrap script prematurely halted execution because of an error"
    echo "$0:$1"
    exit 1
}

trap 'error $LINENO' ERR


function lecho {
    echo $1 | tee -a "$LOG"
}

function log_output {
    echo "$@"
    "$@" >> "$LOG" # 2>&1
}

function unless_cmd_exists {
    cmd="$1"
    shift
    if ! which -s "$cmd"; then
        log_output "$@"
    fi
}

function install_homebrew {
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

function brew_install_if_missing {
    brew="$1"
    lecho "-----> $brew"
    if ! brew list "$brew" > /dev/null 2>&1; then
        log_output brew install "$brew"
    fi
}

function brew_tap_if_missing {
    tap="$1"
    lecho "-----> $tap"
    if ! brew tap | grep -v "$tap"; then
        log_output brew tap "$tap"
    fi
}

function brew_cask_install_if_missing {
    cask="$1"
    lecho "-----> $cask"
    if ! brew cask list "$cask" > /dev/null 2>&1; then
        log_output brew cask install "$cask"
    fi
}

function rbenv_install_if_missing {
    if ! rbenv versions | grep -q "$1"; then
        log_output rbenv install "$1"
        log_output rbenv rehash
    fi
}

function gem_install_if_missing {
    gem="$1"
    lecho "-----> $gem"
    if ! gem list --local "$gem" | grep -q "$gem"; then
        log_output gem install "$gem"
    fi
}

function xcode_command_line_utils_installed {
    pkgutil --pkg-info=com.apple.pkg.CLTools_Executables > /dev/null 2>&1
}

cd $HOME
> "$LOG"

unless_cmd_exists brew install_homebrew

if [ ! -d "$HOME/.emacs.d" ]; then
    git clone git@github.com:kjellm/emacs.d.git .emacs.d
fi

if [ ! -d "$HOME/.bash.d" ]; then
    git clone git@github.com:kjellm/bash-setup.git .bash.d
fi

cat <<EOF > .bashrc
# Do not edit this file, it gets overwritten by the setup script!
. "$HOME/.bash.d/rc.sh"
EOF
cat <<EOF > .bash_profile
# Do not edit this file, it gets overwritten by the setup script!
. "$HOME/.bash.d/profile.sh"
EOF

brews="rbenv ack git bash-completion coreutils tree wget"
casks="emacs"
gems="rake bundler pry"

lecho "BREW --------------------------------------------------"
for X in $brews; do
    brew_install_if_missing "$X"
done

eval "$(rbenv init -)"

lecho "BREW CASK ----------------------------------------------"
brew_tap_if_missing caskroom/cask
for X in $casks; do
    brew_cask_install_if_missing "$X"
done

# XCode command line utils installed? Needed to compile ruby
lecho "XCODE --------------------------------------------------"
if ! xcode_command_line_utils_installed; then
    xcode-select --install
fi

lecho "RBENV --------------------------------------------------"
rbenv_install_if_missing "$RUBY_VERSION"
rbenv local "$RUBY_VERSION"

lecho "GEM ----------------------------------------------------"
for X in $gems; do
    gem_install_if_missing "$X"
done
rbenv rehash
